<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: devise | vimtaku blog]]></title>
  <link href="http://vimtaku.github.io/blog/categories/devise/atom.xml" rel="self"/>
  <link href="http://vimtaku.github.io/"/>
  <updated>2014-08-24T01:09:25+09:00</updated>
  <id>http://vimtaku.github.io/</id>
  <author>
    <name><![CDATA[vimtaku]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[devise に入門してみる]]></title>
    <link href="http://vimtaku.github.io/blog/2014/03/02/z_devise1/"/>
    <updated>2014-03-02T00:00:00+09:00</updated>
    <id>http://vimtaku.github.io/blog/2014/03/02/z_devise1</id>
    <content type="html"><![CDATA[<h2 id="section">背景</h2>
<p><a href="http://vimtaku.github.io/blog/2014/03/02/warden/">devise を知るには warden を知るべしと思ったので warden を勉強した。</a><br />
大体 warden はわかったので warden の仕組みをかぶせた認証エンジンである<br />
<a href="https://github.com/plataformatec/devise">devise</a> を触ってみる。  </p>

<h2 id="section-1">では早速、以下メモ。</h2>

<p><div>
  <pre><code class='bash'>/Users/mac/try_devise/try_devise% be rails g devise:install
      create  config/initializers/devise.rb
      create  config/locales/devise.en.yml
===============================================================================&lt;/p&gt;

&lt;p&gt;Some setup you must do manually if you haven’t yet:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Ensure you have defined default url options in your environments files. Here
is an example of default_url_options appropriate for a development environment
in config/environments/development.rb:&lt;/p&gt;

    &lt;p&gt;config.action_mailer.default_url_options = { :host =&amp;gt; ‘localhost:3000’ }&lt;/p&gt;

    &lt;p&gt;In production, :host should be set to the actual host of your application.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ensure you have defined root_url to &lt;em&gt;something&lt;/em&gt; in your config/routes.rb.
For example:&lt;/p&gt;

    &lt;p&gt;root :to =&amp;gt; “home#index”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ensure you have flash messages in app/views/layouts/application.html.erb.
For example:&lt;/p&gt;

    &lt;p class=&quot;notice&quot;&gt;&amp;lt;%= notice %&amp;gt;&lt;/p&gt;
    &lt;p class=&quot;alert&quot;&gt;&amp;lt;%= alert %&amp;gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you are deploying on Heroku with Rails 3.2 only, you may want to set:&lt;/p&gt;

    &lt;p&gt;config.assets.initialize_on_precompile = false&lt;/p&gt;

    &lt;p&gt;On config/application.rb forcing your application to not access the DB
or load models when precompiling your assets.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can copy Devise views (for customization) to your app by running:&lt;/p&gt;

    &lt;p&gt;rails g devise:views&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;===============================================================================</code></pre>
</div>
</p>

<p>bundle exec rails g devise User<br />
予めcreate database しておく<br />
bundle exec rake db:migrate  </p>

<p>すると出来上がる。
<div>
  <pre><code class='sql'>CREATE TABLE &lt;code&gt;users&lt;/code&gt; (
  &lt;code&gt;id&lt;/code&gt; int(11) NOT NULL AUTO_INCREMENT,
  &lt;code&gt;email&lt;/code&gt; varchar(255) NOT NULL DEFAULT ‘’,
  &lt;code&gt;encrypted_password&lt;/code&gt; varchar(255) NOT NULL DEFAULT ‘’,
  &lt;code&gt;reset_password_token&lt;/code&gt; varchar(255) DEFAULT NULL,
  &lt;code&gt;reset_password_sent_at&lt;/code&gt; datetime DEFAULT NULL,
  &lt;code&gt;remember_created_at&lt;/code&gt; datetime DEFAULT NULL,
  &lt;code&gt;sign_in_count&lt;/code&gt; int(11) NOT NULL DEFAULT ‘0’,
  &lt;code&gt;current_sign_in_at&lt;/code&gt; datetime DEFAULT NULL,
  &lt;code&gt;last_sign_in_at&lt;/code&gt; datetime DEFAULT NULL,
  &lt;code&gt;current_sign_in_ip&lt;/code&gt; varchar(255) DEFAULT NULL,
  &lt;code&gt;last_sign_in_ip&lt;/code&gt; varchar(255) DEFAULT NULL,
  &lt;code&gt;created_at&lt;/code&gt; datetime DEFAULT NULL,
  &lt;code&gt;updated_at&lt;/code&gt; datetime DEFAULT NULL,
  PRIMARY KEY (&lt;code&gt;id&lt;/code&gt;),
  UNIQUE KEY &lt;code&gt;index_users_on_email&lt;/code&gt; (&lt;code&gt;email&lt;/code&gt;),
  UNIQUE KEY &lt;code&gt;index_users_on_reset_password_token&lt;/code&gt; (&lt;code&gt;reset_password_token&lt;/code&gt;)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 |</code></pre>
</div>
</p>

<p>config/routes.rb に行が追加されている。<br />
<blockquote><p>devise_for :users</p></blockquote></p>

<p>localhost:3000 にアクセスすると<br />
<img src="http://gyazo.com/ff5a659072c28ff0934f6ec51ca74dc3.png" /><br />
/users/にものすごくたくさんいろいろできている。  </p>

<p>login した後の、 users/edit とか<br />
<img src="http://gyazo.com/27ca0f5038500c7796c51c81973755a9.png" />  </p>

<h2 id="view-">独自の view を使うには</h2>

<p>独自の view を使うには、<br />
scope (admin モデルと user モデルがいる場合に使用)のロジックを使う方法と、<br />
view を単純に上書きする方法がある。<br />
当然、用途に応じて admin と user のモデルを使うんなら scope を使えば良い。<br />
単純にひとつだけなら、 view を上書きする方法が良い。  </p>

<p>view を上書きする方法では、<br />
be rails generate devise:views して、<br />
devise/sessions/new.html.erb<br />
を編集などすれば良い。  </p>

<p>scope を使う方法では、<br />
config/initializers/devise.rb に<br />
config.scoped_views = true<br />
を追加して、<br />
be rails generate devise:views users<br />
すれば、<br />
users/sessions/new.html.erb<br />
などが使われるようになる。  </p>

<h2 id="section-2">所感</h2>
<p>全然入門できてない。続きはまた書く。</p>

]]></content>
  </entry>
  
</feed>
