<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: devise | vimtaku blog]]></title>
  <link href="http://vimtaku.github.io/blog/categories/devise/atom.xml" rel="self"/>
  <link href="http://vimtaku.github.io/"/>
  <updated>2015-04-02T16:04:49+09:00</updated>
  <id>http://vimtaku.github.io/</id>
  <author>
    <name><![CDATA[vimtaku]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[devise に入門してみる]]></title>
    <link href="http://vimtaku.github.io/blog/2014/03/02/z_devise1/"/>
    <updated>2014-03-02T00:00:00+09:00</updated>
    <id>http://vimtaku.github.io/blog/2014/03/02/z_devise1</id>
    <content type="html"><![CDATA[<h2 id="section">背景</h2>
<p><a href="http://vimtaku.github.io/blog/2014/03/02/warden/">devise を知るには warden を知るべしと思ったので warden を勉強した。</a><br />
大体 warden はわかったので warden の仕組みをかぶせた認証エンジンである<br />
<a href="https://github.com/plataformatec/devise">devise</a> を触ってみる。  </p>

<h2 id="section-1">では早速、以下メモ。</h2>

<p>{% highlight bash %}
/Users/mac/try_devise/try_devise% be rails g devise:install
      create  config/initializers/devise.rb
      create  config/locales/devise.en.yml
===============================================================================</p>

<p>Some setup you must do manually if you haven’t yet:</p>

<ol>
  <li>
    <p>Ensure you have defined default url options in your environments files. Here
is an example of default_url_options appropriate for a development environment
in config/environments/development.rb:</p>

    <p>config.action_mailer.default_url_options = { :host =&gt; ‘localhost:3000’ }</p>

    <p>In production, :host should be set to the actual host of your application.</p>
  </li>
  <li>
    <p>Ensure you have defined root_url to <em>something</em> in your config/routes.rb.
For example:</p>

    <p>root :to =&gt; “home#index”</p>
  </li>
  <li>
    <p>Ensure you have flash messages in app/views/layouts/application.html.erb.
For example:</p>

    <p class="notice">&lt;%= notice %&gt;</p>
    <p class="alert">&lt;%= alert %&gt;</p>
  </li>
  <li>
    <p>If you are deploying on Heroku with Rails 3.2 only, you may want to set:</p>

    <p>config.assets.initialize_on_precompile = false</p>

    <p>On config/application.rb forcing your application to not access the DB
or load models when precompiling your assets.</p>
  </li>
  <li>
    <p>You can copy Devise views (for customization) to your app by running:</p>

    <p>rails g devise:views</p>
  </li>
</ol>

<p>===============================================================================
{% endhighlight %}</p>

<p>bundle exec rails g devise User<br />
予めcreate database しておく<br />
bundle exec rake db:migrate  </p>

<p>すると出来上がる。
{% highlight sql %}
CREATE TABLE <code>users</code> (
  <code>id</code> int(11) NOT NULL AUTO_INCREMENT,
  <code>email</code> varchar(255) NOT NULL DEFAULT ‘’,
  <code>encrypted_password</code> varchar(255) NOT NULL DEFAULT ‘’,
  <code>reset_password_token</code> varchar(255) DEFAULT NULL,
  <code>reset_password_sent_at</code> datetime DEFAULT NULL,
  <code>remember_created_at</code> datetime DEFAULT NULL,
  <code>sign_in_count</code> int(11) NOT NULL DEFAULT ‘0’,
  <code>current_sign_in_at</code> datetime DEFAULT NULL,
  <code>last_sign_in_at</code> datetime DEFAULT NULL,
  <code>current_sign_in_ip</code> varchar(255) DEFAULT NULL,
  <code>last_sign_in_ip</code> varchar(255) DEFAULT NULL,
  <code>created_at</code> datetime DEFAULT NULL,
  <code>updated_at</code> datetime DEFAULT NULL,
  PRIMARY KEY (<code>id</code>),
  UNIQUE KEY <code>index_users_on_email</code> (<code>email</code>),
  UNIQUE KEY <code>index_users_on_reset_password_token</code> (<code>reset_password_token</code>)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 |
{% endhighlight %}</p>

<p>config/routes.rb に行が追加されている。<br />
{% blockquote %}
devise_for :users
{% endblockquote %}</p>

<p>localhost:3000 にアクセスすると<br />
<img src="http://gyazo.com/ff5a659072c28ff0934f6ec51ca74dc3.png" /><br />
/users/にものすごくたくさんいろいろできている。  </p>

<p>login した後の、 users/edit とか<br />
<img src="http://gyazo.com/27ca0f5038500c7796c51c81973755a9.png" />  </p>

<h2 id="view-">独自の view を使うには</h2>

<p>独自の view を使うには、<br />
scope (admin モデルと user モデルがいる場合に使用)のロジックを使う方法と、<br />
view を単純に上書きする方法がある。<br />
当然、用途に応じて admin と user のモデルを使うんなら scope を使えば良い。<br />
単純にひとつだけなら、 view を上書きする方法が良い。  </p>

<p>view を上書きする方法では、<br />
be rails generate devise:views して、<br />
devise/sessions/new.html.erb<br />
を編集などすれば良い。  </p>

<p>scope を使う方法では、<br />
config/initializers/devise.rb に<br />
config.scoped_views = true<br />
を追加して、<br />
be rails generate devise:views users<br />
すれば、<br />
users/sessions/new.html.erb<br />
などが使われるようになる。  </p>

<h2 id="section-2">所感</h2>
<p>全然入門できてない。続きはまた書く。</p>

]]></content>
  </entry>
  
</feed>
