<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: book | vimtaku blog]]></title>
  <link href="http://vimtaku.github.io/blog/categories/book/atom.xml" rel="self"/>
  <link href="http://vimtaku.github.io/"/>
  <updated>2015-02-21T15:49:38+09:00</updated>
  <id>http://vimtaku.github.io/</id>
  <author>
    <name><![CDATA[vimtaku]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ハッカーと画家を読んだ]]></title>
    <link href="http://vimtaku.github.io/blog/2015/01/30/hackers-and-painters/"/>
    <updated>2015-01-30T00:00:00+09:00</updated>
    <id>http://vimtaku.github.io/blog/2015/01/30/hackers-and-painters</id>
    <content type="html"><![CDATA[<p>
</p>

<h2 id="toc">TOC</h2>
<ul id="markdown-toc">
  <li><a href="#toc">TOC</a></li>
  <li><a href="#section">ハッカーと画家を読んだ</a>    <ul>
      <li><a href="#usa">0章 メイドインUSA</a></li>
      <li><a href="#section-1">1章 なぜオタクはモテないのか</a></li>
      <li><a href="#section-2">2章 ハッカーと画家</a></li>
      <li><a href="#section-3">3章 口にできないこと</a></li>
      <li><a href="#section-4">5章 もう一つの未来への道</a></li>
      <li><a href="#section-5">6章 富の創り方</a></li>
      <li><a href="#section-6">9章 ものづくりのセンス</a></li>
      <li><a href="#section-7">10章 プログラミング言語入門</a></li>
      <li><a href="#section-8">11章 100年後の言語</a></li>
      <li><a href="#section-9">12章 普通のやつらの上を行け</a></li>
      <li><a href="#section-10">14章 夢の言語</a></li>
      <li><a href="#section-11">15章 デザインとリサーチ</a></li>
      <li><a href="#section-12">16章 素晴らしきハッカー</a></li>
    </ul>
  </li>
</ul>

<h1 id="section">ハッカーと画家を読んだ</h1>
<p>ハッカーと画家はポール・グラハムによって書かれたエッセイ集で、<br />
何か得られるかなぁとおもって読んでみた。  </p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=vimtaku-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274065979" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<p>全体的には、  </p>

<ul>
  <li>スタートアップでしょ、普通  </li>
  <li>lisp 最高  </li>
  <li>プログラムは、人々がそれを読むために書かれるべきである. たまたま, それが計算機で実行できるに過ぎない.(by SICP)  </li>
  <li>富はお金じゃない。富は作れる、コード書いて富を創ろう  </li>
  <li>ハッカーとはどんなひとたちか  </li>
  <li>誰かに喜ばれるものを作るのではなく、特定のユーザに喜ばれるものを作れ<br />
 – 仕事とかしてたらよく聞くよね、形を変えて。(ペルソナとかそういう  </li>
</ul>

<p>という感じだった。  </p>

<p>今大企業にいるけど、再来月からスタートアップに join するにあたっては、結構背中を押してくれる内容だったと思う。  </p>

<p>一応マインドマップに書いたメモがあるので、それを元に以下に記述する。<br />
(飛ばしている章もある)  </p>

<h2 id="usa">0章 メイドインUSA</h2>
<ul>
  <li>ipod  </li>
  <li>デザイン  </li>
</ul>

<h2 id="section-1">1章 なぜオタクはモテないのか</h2>
<ul>
  <li>nerd であること(賢くありたい)  </li>
  <li>学校は牢獄と同じで、若者たちが社会を邪魔しないためにあるもの<br />
 – 中にいる学生たちがそれを変えるしかない  </li>
</ul>

<h2 id="section-2">2章 ハッカーと画家</h2>
<ul>
  <li>数学者に憧れる必要はない。ハッカーはもっと画家のようであるべき。  </li>
  <li>共感することの重要さ。これが良いものと偉大なものとを分ける。  </li>
  <li>プログラムは、人々がそれを読むために書かれるべきである. たまたま, それが計算機で実行できるに過ぎない.(by SICP)  </li>
</ul>

<h2 id="section-3">3章 口にできないこと</h2>
<ul>
  <li>現代で自然と行われていることが、実は未来では当たり前に<em>やっていない</em>ようなことで、それが現代における「口にできないこと」  </li>
  <li>それを見つけるにはいくつか方法がある<br />
 – 災難をみつける。批難を受けているものに対して、自分で「その主張は真実であるか?」と問うことが重要。<br />
 – 異端  </li>
  <li>口にできないことを探す理由<br />
 – 好奇心<br />
 – 間違っていたくない<br />
 – 頭脳に良い  </li>
  <li>自分の考えを口にだすことはいろいろマイナスがある<br />
 – どちらか意見を聞かれた時、まだ決めてない、と答えるのがベター  </li>
  <li>もっとも重要なことは、「考えたいことを考えられること」  </li>
</ul>

<h2 id="section-4">5章 もう一つの未来への道</h2>
<ul>
  <li>スタートアップは大企業の十倍の生産性がある  </li>
  <li>サーバサイドソフトウェアはめっちゃイイ<br />
 – 使い勝手はダメかもしれないが、とにかく動くということ<br />
 — (感想)今はスマホの時代、これからは IoT とか言われてるけどどうなっていくか。<br />
 — (感想)事実、2010年ころくらいまでは Web アプリ(ゲーム)が大半を占めていが、今はそうではないのでここは話半分で良いと思う  </li>
  <li>サブスクリプションの課金がしっくり来るよねっていう話  </li>
</ul>

<h2 id="section-5">6章 富の創り方</h2>
<ul>
  <li>富は創れる  </li>
  <li>富とお金は等しくない<br />
 – お金は交換媒体である  </li>
  <li>富とは、ものやサービスなどを受けられること。  </li>
</ul>

<h2 id="section-6">9章 ものづくりのセンス</h2>
<ul>
  <li>良いデザインは<br />
 – 単純<br />
 – 永遠<br />
 – 正しい問題を解決する<br />
 – 想像力を換気する<br />
 – ちょっと滑稽<br />
 – 難しい<br />
 – 模倣する<br />
 — 正しい答え + オリジナリティ<br />
 – 奇妙である<br />
 — lisp とか<br />
 – 集団で生起する<br />
 – 大胆である  </li>
  <li>「俺ならもっとうまく出来る」と考える事がとても重要  </li>
</ul>

<h2 id="section-7">10章 プログラミング言語入門</h2>
<ul>
  <li>静的型付言語と動的型付言語の決着はまだついてない<br />
 – ポールは動的のほうが好き<br />
 – (感想) swift のような、型推論があるものだったらいいとこ取りできてて最近は良いと感じている。<br />
 – (感想) clojure は明示的に型を書かないから nil チェックとか頻繁にしなきゃいけなくて、その点 swift は便利. (scala とかもそうらしい)  </li>
</ul>

<h2 id="section-8">11章 100年後の言語</h2>
<ul>
  <li>作りたくなったでしょ？  </li>
</ul>

<h2 id="section-9">12章 普通のやつらの上を行け</h2>
<ul>
  <li>ぶっちゃけプログラミング言語には力の差がある  </li>
  <li>lisp 強い  </li>
  <li>マクロがあることで何でもできる  </li>
  <li>スタートアップとかで利用例が少なくても気にするな、むしろ差別化できて良い  </li>
</ul>

<h2 id="section-10">14章 夢の言語</h2>
<ul>
  <li>ハックしやすい  </li>
  <li>簡潔である  </li>
  <li>書捨てのプログラムを書きやすい  </li>
  <li>ライブラリが豊富  </li>
  <li>効率が良い  </li>
  <li>時間<br />
 – 長く存在  </li>
</ul>

<h2 id="section-11">15章 デザインとリサーチ</h2>
<ul>
  <li>特定のユーザのために創ることが重要  </li>
  <li>とにかく早くプロトタイプを出すこと  </li>
  <li>士気。プロトタイプを出すことによって士気が上がる。  </li>
</ul>

<h2 id="section-12">16章 素晴らしきハッカー</h2>
<ul>
  <li>脳内に非常に大きいコンテキストを展開できる  </li>
  <li>特殊な集中力  </li>
  <li>最初はだれがいいハッカーかはわからない<br />
 – 一緒に働いてみるとわかる  </li>
  <li>自分を素晴らしいハッカーにすることができる方法があるとしたら、その方法とは、自分自身に対して次の契約を結ぶことだ。<br />
 – 「退屈なプロジェクトの仕事は一切しなくて良い、その代わりに、中途半端な仕事はしない。」  </li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【書評】いかにして問題を解くか]]></title>
    <link href="http://vimtaku.github.io/blog/2014/06/01/"/>
    <updated>2014-06-01T00:00:00+09:00</updated>
    <id>http://vimtaku.github.io/blog/2014/06/</id>
    <content type="html"><![CDATA[<h2 id="section">いかにして問題をとくか</h2>
<p>この本は、数学を教える教師と、教わる生徒を主なターゲットとして、<br />
いかにして問題をとくかということを真剣に考えている本である。<br />
心に残った部分を以下に書いていく。  </p>

<h2 id="section-1">決定問題と証明問題</h2>
<p>何かを求めよ. という、問題の中の未知のものを見つけるものが決定問題で、<br />
証明問題はある命題が正しいか正しくないかを示すものである。  </p>

<p>本書では, 決定問題を解くことに重きをおいている。  </p>

<h2 id="section-2">フレームワーク(チートシート)</h2>
<ul>
  <li>未知のものは何か, 条件は何か, データはなにか?  </li>
  <li>条件をいくつかの部分に分けよ  </li>
  <li>データと未知のものとの関連を求めよ  </li>
  <li>未知のものをよく見よ! そして未知のものが同じかまたはよく似た問題は思い起こせ  </li>
  <li>条件の一部を残して他を捨てよ. それでどこまで未知の部分が定まるか?<br />
 – どの範囲で変化しうるか. データから何か役に立つ物を引き出しうるか.<br />
 – その未知のものを決めるのに 適当な他のデータを思いつくか.<br />
 – 未知のもの, データもしくはその両方を変えて新しい未知のものと, 新しいデータとが互いに近いものになるように出来るか?  </li>
  <li>すべてのデータを使ったか, すべての条件を使ったか。  </li>
</ul>

<h2 id="section-3">逆向きに考える</h2>
<p>4リットルと9リットルの桶しかないとき、ちょうど6リットルの水を汲むにはどうすればよいか？<br />
この問に関して、逆向きに考えることが非常に重要だと示された。<br />
答えとしては、9リットルの桶に、6リットルが入っている状態を考えればよい。<br />
9:1から6:4にすればよい。  </p>

<h2 id="section-4">トリアタマ</h2>
<p>食物があり、それとは逆コの字でサクがあったとした時、<br />
犬はそれを錯誤しに取ろうとするがしばらくしてサクを回りこんで<br />
食物を取りに行くことができるが、 鳥はひたすら食物を手前にバタバタしてしまうらしい。<br />
やはりしばらくの試行錯誤が必要ではあるが、あるタイミングで一旦物事を俯瞰してみる必要があるということだ。  </p>

<h2 id="section-5">所感</h2>
<p>とても難しい本ではあった。<br />
また数学レベルが上がった時に読みたい。  </p>

]]></content>
  </entry>
  
</feed>
